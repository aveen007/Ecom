@model Ecom.Models.ProductViewModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Product</h4>

    <div class="row px-xl-5">
        <div class="col-lg-3 col-md-4 col-sm-6 pb-1">
            <div class="product-item bg-light mb-4">
                <div class="product-img position-relative overflow-hidden">
                    <img class="img-fluid w-100" src="@( Model.ImageLink )" alt="">
                    <div class="product-action">
                        <a class="btn btn-outline-dark btn-square" href=""><i class="fa fa-shopping-cart"></i></a>
                        @*<a class="btn btn-outline-dark btn-square" href=""><i class="far fa-heart"></i></a>*@
@*<a class="btn btn-outline-dark btn-square" href=""><i class="fa fa-sync-alt"></i></a>*@
                        @*<a class="btn btn-outline-dark btn-square" href=""><i class="fa fa-search"></i></a>*@
                    </div>
                </div>
                <div class="text-center py-4">
                    <a class="h6 text-decoration-none text-truncate" href="">@Html.DisplayFor(modelItem => Model.Name)</a>
                    <div class="d-flex align-items-center justify-content-center mt-2">
                        <h5>$@Html.DisplayFor(modelItem => Model.Price)</h5><h6 class="text-muted ml-2"><del>$@Html.DisplayFor(modelItem => Model.Price)</del></h6>
                    </div>
                    <div class="d-flex align-items-center justify-content-center mb-1">
                        <small class="fa fa-star text-primary mr-1"></small>
                        <small class="fa fa-star text-primary mr-1"></small>
                        <small class="fa fa-star text-primary mr-1"></small>
                        <small class="fa fa-star text-primary mr-1"></small>
                        <small class="fa fa-star text-primary mr-1"></small>
                        <small>(99)</small>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Sku)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Sku)
        </dd>
@*        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ImageLink)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ImageLink)
        </dd>*@
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category.Name)
        </dd>
    </dl>
</div>
<div class="form-group">
    <select id="SelectedProductSpecs" asp-for="SelectedProductSpecification" class ="form-control" asp-items="ViewBag.SelectedProductSpecification" hidden></select>
    <select id="SelectedProductSpecValues" asp-for="SelectedProductSpecificationValues" class ="form-control" asp-items="ViewBag.SelectedProductSpecificationValues" hidden></select>
    <select id="SelectedCategorySpecs" asp-for="SelectedProductCategorySpecification" class ="form-control" asp-items="ViewBag.SelectedProductCategorySpecification" hidden></select>
    <select id="SelectedCategorySpecValues" asp-for="SelectedProductCategorySpecificationValues" class ="form-control" asp-items="ViewBag.SelectedProductCategorySpecificationValues" hidden></select>
    <select id="Specs" asp-for="ProductSpecification" class ="form-control" asp-items="ViewBag.ProductSpecification" hidden></select>
</div>
<div class="form-group">
    <button type="button" id="showSpecifications" class="btn btn-sm btn-light ml-2" onclick='specsListChange()'>Show Specifications</button>
</div>
<input hidden name="StringifiedJSArray">
<div id="spec">
    <div id='specs_list' class='form-group'>

    </div>
    <p id="msg"></p>
    <script type="text/javascript" src="~/js/site.js"></script>
    <script>
        var isProduct = true;
        var isDetails = true;

        var specifications = document.getElementById("Specs");
        var spec_dictionary = {};
        var cat_spec_dictionary = {};
        var value_dictionary = {};
        var cat_value_dictionary = {};

        for (i = 0; i < specifications.length; i++){
            spec_dictionary[JSON.stringify(specifications.options[i].value)] = specifications.options[i].text;
        }

        var cat_spec_dictionaries = [];
    </script>
    @foreach (var cat_spec in @ViewBag.CategorySpecifications)
    {
        <script>
            var tmp_dictionary = {
                                    "Id": @cat_spec.Item1,
                                    "CategoryId": @cat_spec.Item2,
                                    "SpecificationName": "@cat_spec.Item3"
                                    };
            cat_spec_dictionaries.push(tmp_dictionary);
        </script>
    }
    <script>
        updateHiddenSelect();

        var selectedSpecificationsValues = document.getElementById("SelectedProductSpecValues");

        for (i = 0; i < selectedSpecificationsValues.length; i++){
            var SpecId = selectedSpecificationsValues[i].value;
            var SpecValue = selectedSpecificationsValues[i].text;
            value_dictionary[SpecId] = SpecValue;
        }

        var selectedSpecifications = document.getElementById("SelectedProductSpecs");

        var selectedValues = [];
        for (i = 0; i < selectedSpecifications.length; i++){
            selectedValues.push(selectedSpecifications[i].text)
        }

        if(selectedValues.length > 0)
        {
            var spec = "<input hidden id='specIds' name='Specifications' value='" + JSON.stringify(selectedValues) + "'>"
            $("#spec").append(spec);
        }

        var selectedCategorySpecificationsValues = document.getElementById("SelectedCategorySpecValues");

        for (i = 0; i < selectedCategorySpecificationsValues.length; i++){
            var SpecId = selectedCategorySpecificationsValues[i].value;
            var SpecValue = selectedCategorySpecificationsValues[i].text;
            cat_value_dictionary[SpecId] = SpecValue;
        }

        var selectedCategorySpecifications = document.getElementById("SelectedCategorySpecs");

        var selectedCategoryValues = [];
        for (i = 0; i < selectedCategorySpecifications.length; i++){
            selectedCategoryValues.push(selectedCategorySpecifications[i].text)
        }

        if(selectedCategoryValues.length > 0)
        {
            var spec = "<input hidden id='catSpecIds' name='CategorySpecifications' value='" + JSON.stringify(selectedCategoryValues) + "'>"
            $("#spec").append(spec);
        }

        if (selectedValues.length > 0 || selectedCategoryValues.length > 0)
        {
            updateSpecs();
        }

        function updateValuesInput(){
            var tmp = document.getElementById("specValues")
            if (tmp) {
                let div = document.getElementById("spec")
                div.removeChild(tmp)
            }
            var values_inputs = document.getElementsByClassName("values");
            var values_inputs_values = [];
            for (var i = 0; i < values_inputs.length; i++){
                var parentId = values_inputs[i].parentElement.id.substring(5);
                value_dictionary[parentId] = values_inputs[i].value;
                values_inputs_values.push(values_inputs[i].value)
            }
            var spec = "<input hidden id='specValues' name='ProductSpecificationValues' value='" + JSON.stringify(values_inputs_values) + "'>"
            $("#spec").append(spec);
        }

        function updateCatValuesInput(){
            var tmp = document.getElementById("catSpecValues")
            if (tmp) {
                let div = document.getElementById("spec")
                div.removeChild(tmp)
            }
            var values_inputs = document.getElementsByClassName("catValues");
            var values_inputs_values = [];
            for (var i = 0; i < values_inputs.length; i++){
                var parentId = values_inputs[i].parentElement.id.substring(5);
                cat_value_dictionary[parentId] = values_inputs[i].value;
                values_inputs_values.push(values_inputs[i].value)
            }
            var spec = "<input hidden id='catSpecValues' name='CategorySpecificationValues' value='" + JSON.stringify(values_inputs_values) + "'>"
            $("#spec").append(spec);
        }

        function updateHiddenSelect(){
            cat_spec_dictionary = {};
            cat_value_dictionary = {};

            var tmp = document.getElementById("catSpecIds")
            if (tmp) {
                let div = document.getElementById("spec")
                div.removeChild(tmp)
            }

            var tmp = document.getElementById("catSpecValues")
            if (tmp) {
                let div = document.getElementById("spec")
                div.removeChild(tmp)
            }

            var categoryId = @Html.DisplayFor(model => model.Category.Id);

            for (i = 0; i < cat_spec_dictionaries.length; i++)
            {
                if (cat_spec_dictionaries[i]["CategoryId"] == categoryId)
                {
                    cat_spec_dictionary[cat_spec_dictionaries[i]["Id"]] = cat_spec_dictionaries[i]["SpecificationName"];
                }
            }
            updateSpecs();
        }

        document.getElementById("specs_list").hidden = true;

        function specsListChange(){
            var specsList = document.getElementById("specs_list");
            var showButton = document.getElementById("showSpecifications");

            if (specsList.hidden){
                showButton.textContent = "Hide Specifications";
            }
            else{
                showButton.textContent = "Show Specifications";
            }

            specsList.hidden = !specsList.hidden;
        }
    </script>

</div>
<div>
    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a class="btn btn-primary" href=@Url.Action("index", "Products", new { page=1})>Back to List</a>
</div>
