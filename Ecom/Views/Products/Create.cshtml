@model Ecom.Models.ProductViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
     
         <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" rows="4" cols="50"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sku" class="control-label"></label>
                <input asp-for="Sku" class="form-control" />
                <span asp-validation-for="Sku" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select id='CategoryId'  asp-for="CategoryId" class ="form-control" onchange='updateHiddenSelect()' asp-items="ViewBag.CategoryId"></select>
            </div>
        @*    <div class="form-group">
                <label asp-for="ImageLink" class="control-label"></label>
                <input asp-for="ImageLink" class="form-control" />
                <span asp-validation-for="ImageLink" class="text-danger"></span>
            </div>*@

            <div class="form-group">
                <div class="image-upload">
                    <label for="Imagefile">
                        <img id="prod_img" src="https://customercare.igloosoftware.com/.api2/api/v1/communities/10068556/previews/thumbnails/4fc20722-5368-e911-80d5-b82a72db46f2?width=680&height=680&crop=False" style="cursor: pointer;     max-width: 200px;
    max-height: 200px;" />

                        <div class="mask" style="background-color: hsla(0, 0%, 0%, 0.4)">
                            <div class="d-flex justify-content-center align-items-center h-100">
                                <p class="text-white mb-0">Add product image</p>
                            </div>
                        </div>
                        <div class="hover-overlay">
                            <div class="mask" style="background-color: hsla(0, 0%,98%, 0.2)"></div>
                        </div>
                    </label>
                    <input type="file" id="Imagefile" name="Imagefile" class="form-control"
                           onchange="document.getElementById('prod_img').src = window.URL.createObjectURL(this.files[0])" required/>
                    <span asp-validation-for="Imagefile" class="text-danger"></span>
                </div>

            </div>
            <div class="form-group">
                <select id="Specs" asp-for="ProductSpecification" class ="form-control" asp-items="ViewBag.ProductSpecification" hidden></select>
            </div>
            <div class="form-group">
                <button type="button" id="showSpec"  class="btn btn-sm btn-light ml-2">Show Specification <i class="fa fa-plus"></i></button>
            </div>
            <div id="spec">
                <div id='specs_list' class='form-group'>

                </div>
                <p id="msg"></p>
                <script type="text/javascript" src="~/js/site.js"></script>
                <script>
                    var isProduct = true;

                    var specifications = document.getElementById("Specs");
                    var spec_dictionary = {};
                    var cat_spec_dictionary = {};
                    var value_dictionary = {};
                    var cat_value_dictionary = {};

                    for (i = 0; i < specifications.length; i++){
                        spec_dictionary[JSON.stringify(specifications.options[i].value)] = specifications.options[i].text;
                    }

                    var cat_spec_dictionaries = [];
                </script>
                @foreach (var cat_spec in @ViewBag.CategorySpecifications)
                {
                    <script>
                        var tmp_dictionary = {
                                                "Id": @cat_spec.Item1,
                                                "CategoryId": @cat_spec.Item2,
                                                "SpecificationName": "@cat_spec.Item3"
                                              };
                        cat_spec_dictionaries.push(tmp_dictionary);
                    </script>
                }
                <script>
                    function updateValuesInput(){
                        var tmp = document.getElementById("specValues")
                        if (tmp) {
                            let div = document.getElementById("spec")
                            div.removeChild(tmp)
                        }
                        var values_inputs = document.getElementsByClassName("values");
                        var values_inputs_values = [];
                        for (var i = 0; i < values_inputs.length; i++){
                            var parentId = values_inputs[i].parentElement.id.substring(5);
                            value_dictionary[parentId] = values_inputs[i].value;
                            values_inputs_values.push(values_inputs[i].value)
                        }
                        var spec = "<input hidden id='specValues' name='ProductSpecificationValues' value='" + JSON.stringify(values_inputs_values) + "'>"
                        $("#spec").append(spec);
                    }

                    function updateCatValuesInput(){
                        var tmp = document.getElementById("catSpecValues")
                        if (tmp) {
                            let div = document.getElementById("spec")
                            div.removeChild(tmp)
                        }
                        var values_inputs = document.getElementsByClassName("catValues");
                        var values_inputs_values = [];
                        for (var i = 0; i < values_inputs.length; i++){
                            var parentId = values_inputs[i].parentElement.id.substring(5);
                            cat_value_dictionary[parentId] = values_inputs[i].value;
                            values_inputs_values.push(values_inputs[i].value)
                        }
                        var spec = "<input hidden id='catSpecValues' name='CategorySpecificationValues' value='" + JSON.stringify(values_inputs_values) + "'>"
                        $("#spec").append(spec);
                    }

                    function updateHiddenSelect(){
                        cat_spec_dictionary = {};
                        cat_value_dictionary = {};

                        var tmp = document.getElementById("catSpecIds")
                        if (tmp) {
                            let div = document.getElementById("spec")
                            div.removeChild(tmp)
                        }

                        var tmp = document.getElementById("catSpecValues")
                        if (tmp) {
                            let div = document.getElementById("spec")
                            div.removeChild(tmp)
                        }

                        var category = document.getElementById('CategoryId');
                        var categoryId = category.value;

                        for (i = 0; i < cat_spec_dictionaries.length; i++)
                        {
                            if (cat_spec_dictionaries[i]["CategoryId"] == categoryId)
                            {
                                cat_spec_dictionary[cat_spec_dictionaries[i]["Id"]] = cat_spec_dictionaries[i]["SpecificationName"];
                            }
                        }
                        updateSpecs();
                    }
                    updateHiddenSelect();               
                </script>

            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a class="btn btn-primary" href=@Url.Action("index", "Products", new { page=1})>Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
